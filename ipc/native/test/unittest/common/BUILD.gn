# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

SUBSYSTEM_DIR = "//foundation/communication/ipc"
IPC_TEST_ROOT = "$SUBSYSTEM_DIR/ipc/test"
IPC_CORE_ROOT = "$SUBSYSTEM_DIR/ipc/native"
MODULE_OUTPUT_PATH = "ipc"

ohos_unittest("IPCNativeUnitTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = [
    "$IPC_CORE_ROOT/c/rpc/include",
    "$IPC_CORE_ROOT/c/ipc_adapter/include",
    "$SUBSYSTEM_DIR/interfaces/innerkits/ipc_core/include",
    "$SUBSYSTEM_DIR/interfaces/innerkits/libdbinder/include",
    "$SUBSYSTEM_DIR/native/src/core/include",
  ]

  sources = [
    "buffer_object_unittest.cpp",
    "dbinder_callback_stub_unittest.cpp",
    "dbinder_session_object_unittest.cpp",
    "ipc_core_unittest.cpp",
    "ipc_object_proxy_unittest.cpp",
    "ipc_object_stub_unittest.cpp",
    "ipc_payload_statistics_impl_unittest.cpp",
    "ipc_payload_statistics_unittest.cpp",
    "ipc_process_skeleton_unittest.cpp",
    "ipc_skeleton_unittest.cpp",
    "ipc_thread_pool_unittest.cpp",
    "ipc_thread_skeleton_unittest.cpp",
    "iremote_object_unitest.cpp",
    "message_parcel_unittest.cpp",
    "process_skeleton_unittest.cpp",
  ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_CORE_ROOT/src/core:ipc_common",
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:libhitracechain",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  ldflags = [ "-lpthread" ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("IPCFileDescOpsTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = [
    "$IPC_CORE_ROOT/c/rpc/include",
    "$IPC_CORE_ROOT/c/ipc_adapter/include",
    "$SUBSYSTEM_DIR/interfaces/innerkits/ipc_core/include",
    "$SUBSYSTEM_DIR/interfaces/innerkits/libdbinder/include",
    "$SUBSYSTEM_DIR/native/src/core/include",
  ]

  sources = [ "ipc_file_desc_unittest.cpp" ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("BinderConnectorTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = []

  sources = [ "ipc_connector_unittest.cpp" ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_CORE_ROOT/src/core:ipc_common",
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("BinderInvokerUnitTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = [
    "$IPC_CORE_ROOT/c/adapter/access_token/include",
    "$IPC_CORE_ROOT/c/rpc/include",
  ]

  sources = [ "binder_invoker_unittest.cpp" ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_CORE_ROOT/src/core:ipc_common",
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:libhitracechain",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("IPCHiTraceUnitTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = []

  sources = [ "ipc_hitrace_unittest.cpp" ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:libhitracechain",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

if (support_jsapi) {
  ohos_unittest("IPCNapiUnitTest") {
    module_out_path = MODULE_OUTPUT_PATH

    include_dirs = [ "$SUBSYSTEM_DIR/interfaces/innerkits/ipc_core/include" ]

    sources = [ "ipc_napi_unittest.cpp" ]
    configs = []

    deps = [
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/googletest:gmock_main",
      "//third_party/googletest:gtest_main",
    ]

    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_napi",
      "napi:ace_napi",
    ]

    resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
  }
}

ohos_unittest("IPCMockUnitTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = [
    "$SUBSYSTEM_DIR/interfaces/innerkits/ipc_core/include",
    "$IPC_CORE_ROOT/src/mock/include",
    "$IPC_CORE_ROOT/c/rpc/include",
    "$IPC_CORE_ROOT/c/adapter/access_token/include",
  ]

  sources = [ "ipc_binder_databus_invoker_unittest.cpp" ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:libhitracechain",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("InvokerFactoryTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = [
    "$SUBSYSTEM_DIR/interfaces/innerkits/ipc_core/include",
    "$IPC_CORE_ROOT/src/mock/include",
    "$IPC_CORE_ROOT/c/rpc/include",
    "$IPC_CORE_ROOT/c/adapter/access_token/include",
  ]

  sources = [ "invoker_factory_unittest.cpp" ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:libhitracechain",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("RPCFeatureUnitTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = [
    "$SUBSYSTEM_DIR/interfaces/innerkits/ipc_core/include",
    "$IPC_CORE_ROOT/src/mock/include",
    "$IPC_CORE_ROOT/c/rpc/include",
    "$IPC_CORE_ROOT/c/adapter/access_token/include",
    "$IPC_CORE_ROOT/c/rpc/src/",
  ]

  sources = [ "rpc_feature_set_unittest.cpp" ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:libhitracechain",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("IPCSoDlcloseTest") {
  module_out_path = MODULE_OUTPUT_PATH

  sources = [ "ipc_so_dlclose_unittest.cpp" ]

  deps = [
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("IPCBlockThreadTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = [ "$SUBSYSTEM_DIR/utils/include" ]

  sources = [ "ipc_block_thread_unittest.cpp" ]

  deps = [
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "hilog:libhilog",
    "ipc:ipc_core",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

ohos_unittest("IpcCApiUnitTest") {
  module_out_path = MODULE_OUTPUT_PATH

  include_dirs = [ "$SUBSYSTEM_DIR/interfaces/innerkits/ipc_core/include" ]

  sources = [
    "ipc_capi_parcel_unittest.cpp",
    "ipc_capi_remote_object_unittest.cpp",
    "ipc_capi_skeleton_unittest.cpp",
  ]

  configs = [
    "$SUBSYSTEM_DIR/config:ipc_util_config",
    "$IPC_TEST_ROOT:ipc_test_config",
  ]

  deps = [
    "$IPC_TEST_ROOT/auxiliary/native:TestAssistance",
    "$SUBSYSTEM_DIR/interfaces/innerkits/c_api:ipc_capi",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:libhitracechain",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  resource_config_file = "$SUBSYSTEM_DIR/test/resource/ipc/ohos_test.xml"
}

###############################################################################
group("unittest") {
  testonly = true
  deps = [
    ":BinderConnectorTest",
    ":BinderInvokerUnitTest",
    ":IPCBlockThreadTest",
    ":IPCFileDescOpsTest",
    ":IPCHiTraceUnitTest",
    ":IPCMockUnitTest",
    ":IPCNativeUnitTest",
    ":IPCSoDlcloseTest",
    ":InvokerFactoryTest",
    ":IpcCApiUnitTest",
    ":RPCFeatureUnitTest",
  ]
  if (support_jsapi) {
    deps += [ ":IPCNapiUnitTest" ]
  }
}

###############################################################################

